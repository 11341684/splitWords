{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///GIS.js","webpack:///webpack/bootstrap d9e55e53c3b86e016460?9d8b","webpack:///./src/components/addressSplit/index.js","webpack:///./src/components/addressSplit/util.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","0","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","defineProperty","index","undefined","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_util","_util2","Library","ROOTCODE","stopLevel","orderRegExp","Dispatcher","option","basePrefix","getId","type","callback","once","stop","on","data","emit","off","name","clipping","arguments","isObject","hasOwnProperty","isFunction","onByObject","opt","$events","eventPool","async","split","len","scope","number","_loop","currentEvent","setTimeout","eventNames","j","_eventNames","splice","join","joiner","CityModel","code","childrenNode","parent","level","weights","parentCode","matchText","matchedText","matchToText","dealIndex","RegExp","matchTexts","childrenCity","getChildren","getChildrenMap","childrenNodeSort","child","end","emitNext","match","getTopId","noMatch","fullInfo","getFullInfoByValue","test","slice","cityNode","city","getObjectLength","createChildNode","reg","childrenValues","getChildrenValues","libraryStr","replace","_library","indexOf","_index","currentNode","weightsAdd","close","children","sort","a","b","getChildrenNode","current","getTopParent","forEach","complete","result","_Dispatcher","_this","getPrototypeOf","allowJumpInterval","String","tree","createRoot","num","isNaN","_this2","Promise","resolve","reject","childrenNodes","val","_this3","startSplitInfomation","start","then","txt","_address","prevExpReg","mobilePhoneExpReg","mobilePhoneFullExpReg","mobilePhone","trimSpace","phone","phoneExpReg","phoneFullExpReg","matchToTexts","getMatchToTexts","first","last","merge","address","_matchPhone","matchPhone","_matchPhone2","personExp","personMatchExps","personLastExp","splitSpace","person","mayPerson","merges","concat","persons","trimArray","reverse","library","newArr","108","toString","inArray","array","inArrayTwo","extend","_len","parms","_key"],"mappings":"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","file":"GIS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GIS\"] = factory();\n\telse\n\t\troot[\"GIS\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GIS\"] = factory();\n\telse\n\t\troot[\"GIS\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.index = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //import Library from './addressLibrary';\n\t\n\t\n\tvar _util = __webpack_require__(108);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Library = {};\n\tvar ROOTCODE = '0';\n\tvar order = ['country', 'province', 'city', 'district', 'town', 'address'];\n\tvar stopLevel = 4;\n\tvar orderRegExp = [null, /(省|市|(壮族|回族|维吾尔族?)?自治区|特别行政区)((?=,)|$)/g, /(市|自治县|自治州|地区)((?=,)|$)/g, /(自治县|[县区市])((?=,)|$)/g, /(街道办事处|地区办事处|乡|镇|街道)((?=,)|$)/g];\n\t\n\tvar Dispatcher = function () {\n\t    function Dispatcher(option) {\n\t        _classCallCheck(this, Dispatcher);\n\t\n\t        this.basePrefix = _util2.default.getId();\n\t\n\t        this.id = option.id || '';\n\t    }\n\t\n\t    _createClass(Dispatcher, [{\n\t        key: 'on',\n\t        value: function on(type, callback, once, stop) {\n\t            return Dispatcher.on(type, this.id, callback, once, stop);\n\t        }\n\t    }, {\n\t        key: 'emit',\n\t        value: function emit(type, data) {\n\t            return Dispatcher.emit(type, data, this.id, this);\n\t        }\n\t    }, {\n\t        key: 'off',\n\t        value: function off(type, callback) {\n\t            return Dispatcher.off(type, this.id, callback);\n\t        }\n\t    }, {\n\t        key: 'once',\n\t        value: function once(type, name, callback, stop) {\n\t            return Dispatcher.once(type, this.id, callback, stop);\n\t        }\n\t    }, {\n\t        key: 'onByObject',\n\t        value: function onByObject(option) {\n\t            var clipping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\t\n\t            if (!_util2.default.isObject(option)) return false;\n\t            for (var key in option) {\n\t                if (!option.hasOwnProperty(key)) continue;\n\t                if (_util2.default.isFunction(option[key])) {\n\t                    this.on(key, option[key]);\n\t                    if (clipping) {\n\t                        delete option[key];\n\t                    }\n\t                } else if (_util2.default.isObject(option[key])) {\n\t                    this.onByObject(option[key], clipping);\n\t                }\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'once',\n\t        value: function once(type, name, callback, stop) {\n\t            return Dispatcher.on(type, name, callback, true, stop);\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(type, name, callback) {\n\t            var once = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t            var stop = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\t\n\t            var opt = type;\n\t            var $events = Dispatcher.eventPool;\n\t            if (typeof type === 'string') {\n\t                opt = {};\n\t                opt.type = type;\n\t                if (typeof name === 'string' || _util2.default.isFunction(callback)) {\n\t                    opt.name = name;\n\t                    opt.callback = callback;\n\t                } else {\n\t                    opt.callback = name;\n\t                }\n\t                opt.once = once;\n\t                opt.stop = stop;\n\t            }\n\t            if (!_util2.default.isFunction(opt.callback)) return false;\n\t            if (!opt.type || typeof opt.type !== 'string') return false;\n\t            opt.async = opt.type.split('!').length > 1;\n\t            for (var i = 0, len = $events.length; i < len; i++) {\n\t                if (opt.name && $events[i].name && opt.name === $events[i].name && opt.type === $events[i].type) {\n\t                    return false;\n\t                }\n\t            }\n\t            $events.push(opt);\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'emit',\n\t        value: function emit(type, data, name, scope) {\n\t            scope = scope || this;\n\t            var $events = Dispatcher.eventPool;\n\t            var number = 0;\n\t\n\t            var _loop = function _loop(i, len) {\n\t                var currentEvent = $events[i];\n\t                if (type && type === currentEvent.type) {\n\t                    if (!(name && currentEvent.name && currentEvent.name !== name)) {\n\t                        number++;\n\t                        currentEvent.callback.call(scope || {}, data);\n\t                        if (currentEvent.once === true) {\n\t                            setTimeout(function () {\n\t                                Dispatcher.off(currentEvent.type, currentEvent.name, currentEvent.callback);\n\t                            }, 0);\n\t                        }\n\t                        if (currentEvent.stop === false && currentEvent.name) {\n\t                            var eventNames = currentEvent.name.split('.');\n\t                            if (eventNames.length > 1) {\n\t                                for (var j = 0; j < eventNames.length; j++) {\n\t                                    var _eventNames = eventNames;\n\t                                    _eventNames.splice(eventNames.length - 1 - j, j + 1);\n\t                                    if (Dispatcher.emit(type, data, _eventNames.join('.'), scope) !== 0) {\n\t                                        break;\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            };\n\t\n\t            for (var i = 0, len = $events.length; i < len; i++) {\n\t                _loop(i, len);\n\t            }\n\t            return number;\n\t        }\n\t    }, {\n\t        key: 'off',\n\t        value: function off(type, name, callback) {\n\t            var number = 0;\n\t            if (arguments.length === 0) {\n\t                number = Dispatcher.eventPool.length;\n\t                Dispatcher.eventPool = [];\n\t                return number;\n\t            }\n\t            var opt = type;\n\t            var $events = Dispatcher.eventPool;\n\t            if (typeof type === 'string') {\n\t                opt = {};\n\t                opt.type = type;\n\t                if (typeof name === 'string' || callback) {\n\t                    opt.name = name;\n\t                    opt.callback = callback;\n\t                } else {\n\t                    opt.callback = name;\n\t                }\n\t            }\n\t            for (var i = 0; i < $events.length; i++) {\n\t                if (!(opt.name && $events[i].name && opt.name !== $events[i].name || opt.type && $events[i].type && opt.type !== $events[i].type)) {\n\t                    if (!opt.callback || opt.callback === $events[i].callback) {\n\t                        number++;\n\t                        $events.splice(i, 1);\n\t                        i--;\n\t                    }\n\t                }\n\t            }\n\t            Dispatcher.eventPool = $events;\n\t            return number;\n\t        }\n\t    }, {\n\t        key: 'publish',\n\t        value: function publish() {}\n\t    }]);\n\t\n\t    return Dispatcher;\n\t}();\n\t\n\tDispatcher.eventPool = [];\n\tDispatcher.joiner = '-';\n\t\n\tvar CityModel = function () {\n\t    function CityModel() {\n\t        var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t        _classCallCheck(this, CityModel);\n\t\n\t        //编码\n\t        this.code = option.code;\n\t        //重点子城市\n\t        this.childrenNode = [];\n\t        //父级\n\t        this.parent = option.parent;\n\t        //层\n\t        this.level = option.level;\n\t        //权重\n\t        this.weights = option.weights;\n\t        //值\n\t        this.value = option.value;\n\t        //父节点code\n\t        this.parentCode = option.parentCode;\n\t        //匹配前的字符\n\t        this.matchText = option.matchText;\n\t        //匹配后的字符\n\t        this.matchedText = option.matchedText;\n\t        //匹配到的字符\n\t        this.matchToText = option.matchToText;\n\t        //当前处理序列\n\t        this.dealIndex = 0;\n\t        if (orderRegExp[this.level] instanceof RegExp && this.matchText) {\n\t            this.matchTexts = option.matchText.split(orderRegExp[this.level]);\n\t        }\n\t    }\n\t\n\t    _createClass(CityModel, [{\n\t        key: 'getParentMatchText',\n\t        value: function getParentMatchText() {\n\t            return this.parent && this.parent.matchText;\n\t        }\n\t    }, {\n\t        key: 'getChildrenMap',\n\t        value: function getChildrenMap(type) {\n\t            var childrenCity = this.getChildren();\n\t            if (!childrenCity) return false;\n\t            var arr = [];\n\t            switch (type) {\n\t                case 'code':\n\t                    for (var key in childrenCity) {\n\t                        if (!childrenCity.hasOwnProperty(key)) continue;\n\t                        arr.push(key);\n\t                    }\n\t                    break;\n\t                case 'value':\n\t                    for (var _key in childrenCity) {\n\t                        if (!childrenCity.hasOwnProperty(_key)) continue;\n\t                        arr.push(childrenCity[_key]);\n\t                    }\n\t                    break;\n\t                default:\n\t                    for (var _key2 in childrenCity) {\n\t                        if (!childrenCity.hasOwnProperty(_key2)) continue;\n\t                        arr.push([_key2, childrenCity[_key2]]);\n\t                    }\n\t                    break;\n\t            }\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'getChildren',\n\t        value: function getChildren() {\n\t            var code = this.code || ROOTCODE;\n\t            return Library[code];\n\t        }\n\t    }, {\n\t        key: 'getChildrenValues',\n\t        value: function getChildrenValues() {\n\t            return this.getChildrenMap('value');\n\t        }\n\t    }, {\n\t        key: 'emitNext',\n\t        value: function emitNext() {\n\t            var parent = this.parent;\n\t            if (parent) {\n\t                var dealIndex = parent.dealIndex;\n\t                var length = parent.childrenNode.length;\n\t                if (dealIndex + 2 > length || length === 0) {\n\t                    if (parent.weights >= 95 && parent.level >= 0) {\n\t                        parent.childrenNodeSort();\n\t                        var child = parent.childrenNode[0];\n\t                        if (child && child.weights >= 95) {\n\t                            child.end();\n\t                        } else {\n\t                            parent.end();\n\t                        }\n\t                        return true;\n\t                    }\n\t                    return parent.emitNext();\n\t                } else {\n\t                    parent.dealIndex++;\n\t                    parent.childrenNode[parent.dealIndex].match();\n\t                }\n\t            } else {\n\t                index.emit('splitError', null, this.getTopId());\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'createChildNode',\n\t        value: function createChildNode(matchToText, weights) {\n\t            var noMatch = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t            var level = this.level + 1;\n\t            var parent = this;\n\t            var parentCode = this.code;\n\t            var matchToCity = void 0;\n\t            var fullInfo = this.getFullInfoByValue(matchToText);\n\t            if (new RegExp(fullInfo.value).test(this.matchText)) {\n\t                matchToText = fullInfo.value;\n\t            }\n\t            var matchTexts = this.matchText.split(matchToText);\n\t            var matchText = this.matchText;\n\t            if (matchTexts.length > 1) {\n\t                matchText = matchTexts.slice(1).join('');\n\t            }\n\t            weights = weights || 0;\n\t            this.matchedText = matchText;\n\t            if (noMatch) {\n\t                matchToText = null;\n\t            }\n\t            if (fullInfo) {\n\t                var code = fullInfo.code,\n\t                    value = fullInfo.value;\n\t\n\t                var cityNode = new CityModel({\n\t                    parentCode: parent.code,\n\t                    code: code,\n\t                    weights: weights,\n\t                    matchToText: matchToText,\n\t                    matchText: matchText,\n\t                    level: level,\n\t                    parent: parent,\n\t                    value: value\n\t                });\n\t                this.childrenNode.push(cityNode);\n\t                return cityNode;\n\t            }\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'createChildrenNode',\n\t        value: function createChildrenNode() {\n\t            var city = this.getChildren();\n\t            var len = _util2.default.getObjectLength(city);\n\t            var weights = len === 1 && this.weights || 1;\n\t            for (var key in city) {\n\t                if (!city.hasOwnProperty(key)) continue;\n\t                this.createChildNode(city[key], weights, true);\n\t            }\n\t            return true;\n\t        }\n\t    }, {\n\t        key: 'getFullInfoByValue',\n\t        value: function getFullInfoByValue(value) {\n\t            var city = this.getChildren();\n\t            for (var key in city) {\n\t                if (!city.hasOwnProperty(key)) continue;\n\t                if (new RegExp(value).test(city[key])) {\n\t                    return { code: key, value: city[key] };\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'match',\n\t        value: function match() {\n\t            var reg = orderRegExp[this.level];\n\t            var matchText = this.matchText;\n\t            if (!matchText) return this.end();\n\t            var code = this.code;\n\t            var parent = this.parent;\n\t            var childrenValues = this.getChildrenValues();\n\t            if (childrenValues) {\n\t                var libraryStr = childrenValues.join(\",\");\n\t                if (reg) {\n\t                    libraryStr = libraryStr.replace(reg, '');\n\t                }\n\t                var _library = libraryStr.split(',');\n\t                var result = [];\n\t                if (_library.length === 1) {\n\t                    this.createChildNode(_library[0], this.weights, true);\n\t                } else if (_library.length === 0) {\n\t                    return this.end();\n\t                } else {\n\t                    for (var i = 0; i < _library.length; i++) {\n\t                        if (new RegExp(_library[i]).test(matchText) && matchText.indexOf(_library[i]) <= 5) {\n\t                            var _index = matchText.indexOf(_library[i]);\n\t                            var weights = 100 - _index;\n\t                            var currentNode = this.createChildNode(_library[i], weights);\n\t                            if (currentNode) {\n\t                                currentNode.weightsAdd();\n\t                            }\n\t                        } else if (parent && new RegExp(_library[i]).test(parent.matchText)) {\n\t                            this.matchText = this.parent.matchText;\n\t                            var _index2 = parent.matchText.indexOf(_library[i]);\n\t                            var _weights = 50 - _index2;\n\t                            var _currentNode = this.createChildNode(_library[i], _weights);\n\t                            if (_currentNode) {\n\t                                _currentNode.weightsAdd();\n\t                            }\n\t                        } else {\n\t                            this.createChildNode(_library[i], 1, true);\n\t                        }\n\t                    }\n\t                }\n\t                this.childrenNodeSort();\n\t                var childrenNode = this.childrenNode[0];\n\t                if (childrenNode && childrenNode.weights <= 1 && this.weights <= 1) {\n\t                    this.close();\n\t                    this.emitNext();\n\t                } else {\n\t                    this.childrenNode[0].match();\n\t                }\n\t            } else if (typeof this.getChildren() === 'undefined') {\n\t                if (this.level >= stopLevel || index.emit('noChildren', this, this.getTopId()) === 0) {\n\t                    if (this.weights <= 95) {\n\t                        this.close();\n\t                        this.emitNext();\n\t                    } else {\n\t                        this.end();\n\t                    }\n\t                }\n\t            } else {\n\t                this.emitNext();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'childrenNodeSort',\n\t        value: function childrenNodeSort() {\n\t            var children = this.childrenNode;\n\t            if (children.length > 1) {\n\t                children.sort(function (a, b) {\n\t                    if (!b) {\n\t                        return -1;\n\t                    }\n\t                    if (!a) {\n\t                        return 1;\n\t                    }\n\t                    if (a.weights > b.weights) {\n\t                        return -1;\n\t                    }\n\t                    return 1;\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'close',\n\t        value: function close() {\n\t            var parent = this.parent;\n\t            if (parent) {\n\t                for (var i = 0; i < parent.childrenNode.length; i++) {\n\t                    if (parent.childrenNode[i] === this) {\n\t                        parent.childrenNode[i] = null;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getLastChild',\n\t        value: function getLastChild() {\n\t            var children = this.getChildrenNode();\n\t            if (children.length === 0) return null;\n\t            return children[children.length - 1];\n\t        }\n\t    }, {\n\t        key: 'getChildrenNode',\n\t        value: function getChildrenNode() {\n\t            var current = this;\n\t            var children = [];\n\t            while (current.childrenNode.length > 0) {\n\t                var childrenNode = current.childrenNode[current.dealIndex];\n\t                if (!childrenNode) break;\n\t                current = childrenNode;\n\t                children.push(current);\n\t            }\n\t            return children;\n\t        }\n\t    }, {\n\t        key: 'getTopParent',\n\t        value: function getTopParent() {\n\t            var parent = this;\n\t            while (parent.parent) {\n\t                parent = parent.parent;\n\t            }\n\t            return parent;\n\t        }\n\t    }, {\n\t        key: 'end',\n\t        value: function end() {\n\t            var parent = this.getTopParent();\n\t            var childrenNode = parent.getChildrenNode();\n\t            var arr = [];\n\t            childrenNode.forEach(function (value) {\n\t                if (value) {\n\t                    arr.push(value.value);\n\t                }\n\t            });\n\t            if (childrenNode.length > 0) {\n\t                arr.push(childrenNode[childrenNode.length - 1].matchText);\n\t            }\n\t            parent.complete = true;\n\t            parent.result = arr;\n\t            index.emit('splitSuccess', arr, parent.id);\n\t        }\n\t    }, {\n\t        key: 'getTopId',\n\t        value: function getTopId() {\n\t            var parent = this;\n\t            while (parent.parent) {\n\t                parent = parent.parent;\n\t            }\n\t            return parent.id;\n\t        }\n\t    }, {\n\t        key: 'getParentsWeights',\n\t        value: function getParentsWeights() {\n\t            var parent = this;\n\t            var weights = parent.weights || 0;\n\t            while (parent.parent) {\n\t                parent = parent.parent;\n\t                weights += parent.weights || 0;\n\t            }\n\t            return weights;\n\t        }\n\t    }, {\n\t        key: 'weightsAdd',\n\t        value: function weightsAdd() {\n\t            var parent = this.parent;\n\t            while (parent) {\n\t                parent.weights += 50;\n\t                parent = parent.parent;\n\t            }\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return CityModel;\n\t}();\n\t\n\tvar index = exports.index = function (_Dispatcher) {\n\t    _inherits(index, _Dispatcher);\n\t\n\t    function index(matchText) {\n\t        _classCallCheck(this, index);\n\t\n\t        var id = _util2.default.getId();\n\t\n\t        var _this = _possibleConstructorReturn(this, (index.__proto__ || Object.getPrototypeOf(index)).call(this, { id: id }));\n\t\n\t        _this.allowJumpInterval = 2;\n\t\n\t        _this.matchText = String(matchText).replace(/\\u202d/g, '');\n\t        _this.matchText = _this.matchText.replace(/[\\r\\n]/g, ' ');\n\t        _this.level = 0;\n\t        _this.id = id;\n\t        _this.tree = _this.createRoot();\n\t        _this.tree.id = id;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(index, [{\n\t        key: 'setAllowJumpInterval',\n\t        value: function setAllowJumpInterval(num) {\n\t            if (isNaN(num)) {\n\t                return false;\n\t            }\n\t            this.allowJumpInterval = num;\n\t        }\n\t    }, {\n\t        key: 'createRoot',\n\t        value: function createRoot() {\n\t            var root = {\n\t                parentCode: null,\n\t                level: 0,\n\t                code: ROOTCODE,\n\t                matchText: this.matchText,\n\t                weights: 100\n\t            };\n\t            return new CityModel(root);\n\t        }\n\t    }, {\n\t        key: 'start',\n\t        value: function start(callback) {\n\t            var _this2 = this;\n\t\n\t            if (callback) {\n\t                this.on('splitSuccess', callback, true);\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                _this2.on('splitSuccess', resolve, true);\n\t                _this2.on('splitError', reject, true);\n\t                _this2.tree.match();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getTree',\n\t        value: function getTree() {\n\t            return this.tree;\n\t        }\n\t    }, {\n\t        key: 'getMatchToTexts',\n\t        value: function getMatchToTexts() {\n\t            var childrenNodes = this.tree.getChildrenNode();\n\t            var arr = [];\n\t            childrenNodes.forEach(function (val) {\n\t                if (val.matchToText) {\n\t                    arr.push(val.matchToText);\n\t                }\n\t            });\n\t            if (childrenNodes.length > 0) {\n\t                arr.push(childrenNodes[childrenNodes.length - 1].matchText);\n\t            }\n\t            return arr;\n\t        }\n\t    }, {\n\t        key: 'splitInfomation',\n\t        value: function splitInfomation(callback) {\n\t            var _this3 = this;\n\t\n\t            if (callback) {\n\t                this.on('splitInfomationSuccess', callback, true);\n\t            }\n\t            return new Promise(function (resolve, reject) {\n\t                _this3.on('splitInfomationSuccess', resolve, true);\n\t                _this3.on('splitInfomationError', reject, true);\n\t                if (_this3.tree.complete) {\n\t                    return _this3.startSplitInfomation();\n\t                }\n\t                _this3.start().then(function (val) {\n\t                    var result = _this3.startSplitInfomation();\n\t                    _this3.emit(result && 'splitInfomationSuccess' || 'splitInfomationError', result, true);\n\t                });\n\t            });\n\t        }\n\t    }, {\n\t        key: 'matchPhone',\n\t        value: function matchPhone(txt, _address) {\n\t            txt = String(txt);\n\t            _address = String(_address);\n\t            var prevExpReg = '([\\\\s,，、]*)?(手机|联系方式|电话|联系人)?号?(号码)?(、|:|：|\\\\s)?'; //(\\d{11}|(\\d|-|转){8,30})\n\t            var mobilePhoneExpReg = '(([(（]?\\\\+86[)）]?)?1\\\\d{2}[ \\\\-]?\\\\d{4}[ \\\\-]?\\\\d{4})';\n\t            var mobilePhoneFullExpReg = prevExpReg + mobilePhoneExpReg;\n\t            var mobilePhone = txt.match(new RegExp(mobilePhoneFullExpReg, 'g'));\n\t            var trimSpace = /[^\\d]/g;\n\t            var data = {};\n\t            if (mobilePhone) {\n\t                txt = txt.replace(new RegExp(mobilePhoneFullExpReg, 'g'), ' ');\n\t                _address = _address.replace(new RegExp(mobilePhoneFullExpReg, 'g'), ' ');\n\t                data.mobilePhone = mobilePhone[0].match(new RegExp(mobilePhoneExpReg))[0].replace(trimSpace, '');\n\t                if (mobilePhone[1]) {\n\t                    data.phone = mobilePhone[1].match(new RegExp(mobilePhoneExpReg))[0].replace(trimSpace, '') + ' ';\n\t                }\n\t            }\n\t            var phoneExpReg = '(\\\\d|([\\\\-转()（） ]{0,2}\\\\d){1}){8,30}';\n\t            var phoneFullExpReg = prevExpReg + phoneExpReg;\n\t            var phone = txt.match(new RegExp(phoneFullExpReg, 'g'));\n\t            if (phone) {\n\t                txt = txt.replace(new RegExp(phoneFullExpReg, 'g'), ' ');\n\t                _address = _address.replace(new RegExp(phoneFullExpReg, 'g'), ' ');\n\t                data.phone = (data.phone || '') + phone[0].match(new RegExp(phoneExpReg))[0];\n\t                if (phone[1]) {\n\t                    data.phone += phone[1].match(new RegExp(phoneExpReg))[0];\n\t                }\n\t            }\n\t            return [data.mobilePhone, data.phone, txt, _address];\n\t        }\n\t    }, {\n\t        key: 'startSplitInfomation',\n\t        value: function startSplitInfomation(txt) {\n\t            txt = txt || this.matchText;\n\t            var matchToTexts = this.getMatchToTexts();\n\t            var first = void 0,\n\t                last = void 0;\n\t            if (matchToTexts.length > 1) {\n\t                first = txt.match(new RegExp('.*?(?=' + matchToTexts[0] + ')'));\n\t                last = matchToTexts[matchToTexts.length - 1]; //txt.match(new RegExp('(?<='+matchToTexts[matchToTexts.length-1]+').*$'));\n\t            } else {\n\t                first = txt;\n\t                last = '';\n\t            }\n\t            var merge = ' ' + first + \" $$$$ \" + last + ' ';\n\t            var address = [].concat(_toConsumableArray(this.tree.result));\n\t            var _address = address[address.length - 1];\n\t            var mobilePhone = void 0,\n\t                phone = void 0;\n\t\n\t            var _matchPhone = this.matchPhone(merge, _address);\n\t\n\t            var _matchPhone2 = _slicedToArray(_matchPhone, 4);\n\t\n\t            mobilePhone = _matchPhone2[0];\n\t            phone = _matchPhone2[1];\n\t            merge = _matchPhone2[2];\n\t            _address = _matchPhone2[3];\n\t\n\t            var personExp = /(([^\\u4e00-\\u9fa5]*)?(姓名|名字|([收发][件货]人)|联系人)[:：\\s]*)|([^a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]*$)/g;\n\t            var personMatchExps = /[^\\u4e00-\\u9fa5](姓名|名字|([收发][件货]人)|联系人)[:：\\s]*[a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]{1,15}[^a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]*/g;\n\t            var personLastExp = /[\\s,，、][^\\s,，、]{2,15}[（(]收[)）]/g;\n\t            var splitSpace = /[^a-zA-Z0-9\\u4e00-\\u9fa5]+/g;\n\t            var person = merge.match(personMatchExps);\n\t\n\t            if (person) {\n\t                person = person[0].replace(personExp, '');\n\t            } else {\n\t                person = merge.match(personLastExp);\n\t                if (person) {\n\t                    person = person[0].replace(personExp, '');\n\t                }\n\t            }\n\t            if (!person) {\n\t                var mayPerson = [];\n\t                var merges = merge.split(\"$$$$\");\n\t                first = merges[0];\n\t                last = merges[1];\n\t                if (first) {\n\t                    mayPerson = mayPerson.concat(first.split(splitSpace));\n\t                }\n\t                if (last) {\n\t                    var persons = index.trimArray(last.split(splitSpace));\n\t                    if (persons.length > 0 && !/谢谢/.test(persons[persons.length - 1])) {\n\t                        persons = persons.reverse();\n\t                    }\n\t                    mayPerson = mayPerson.concat(persons);\n\t                }\n\t                for (var i = 0; i < mayPerson.length; i++) {\n\t                    var name = mayPerson[i].replace(personExp, '');\n\t                    if (name && !/地址/.test(name) && !/[0-9a-zA-Z][楼号栋斤室]/.test(name) && (/(^[王李张刘陈杨黄赵周吴徐孙马朱胡林郭何高罗郑梁宋唐许邓冯韩曹])|(先生|女士|[^拒]收)$/.test(name) || name.length <= 15)) {\n\t                        person = name;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            _address.replace(/[\\s,，、]{2,}/, '');\n\t            address[address.length - 1] = _address;\n\t            person = person || '';\n\t            person = person.replace(/^\\s*|\\s*$/g, '');\n\t            return { mobilePhone: mobilePhone, phone: phone, person: person, address: address };\n\t        }\n\t    }], [{\n\t        key: 'setRootId',\n\t        value: function setRootId(id) {\n\t            if (!id) return false;\n\t            ROOTCODE = String(id);\n\t        }\n\t    }, {\n\t        key: 'setLibrary',\n\t        value: function setLibrary(library) {\n\t            Library = library;\n\t        }\n\t    }, {\n\t        key: 'setStopLevel',\n\t        value: function setStopLevel(level) {\n\t            stopLevel = level;\n\t        }\n\t    }, {\n\t        key: 'setAllowJumpInterval',\n\t        value: function setAllowJumpInterval(num) {\n\t            if (isNaN(num)) {\n\t                return false;\n\t            }\n\t            index.prototype.allowJumpInterval = num;\n\t        }\n\t    }, {\n\t        key: 'trimArray',\n\t        value: function trimArray(arr) {\n\t            var newArr = [];\n\t            if (_util2.default.isArray(arr)) {\n\t                for (var i = 0; i < arr.length; i++) {\n\t                    if (arr[i]) {\n\t                        newArr.push(arr[i]);\n\t                    }\n\t                }\n\t            }\n\t            return newArr;\n\t        }\n\t    }]);\n\t\n\t    return index;\n\t}(Dispatcher);\n\n/***/ }),\n\n/***/ 108:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * 自增ID\n\t * @type {number}\n\t */\n\tvar id = 0;\n\texports.default = {\n\t    /**\n\t     * 检测参数类型是否为数组\n\t     * @param a {*}\n\t     * @return {boolean}\n\t     */\n\t    isArray: function isArray(a) {\n\t        return Object.prototype.toString.call(a) === '[object Array]';\n\t    },\n\t    /**\n\t     * 检测参数类型是否为原生对象\n\t     * @param a\n\t     * @return {boolean}\n\t     */\n\t    isObject: function isObject(a) {\n\t        return Object.prototype.toString.call(a) === '[object Object]';\n\t    },\n\t    /**\n\t     * 检测参数类型是否为函数\n\t     * @param a\n\t     * @return {boolean}\n\t     */\n\t    isFunction: function isFunction(a) {\n\t        return Object.prototype.toString.call(a) === '[object Function]';\n\t    },\n\t    /**\n\t     * 检查是否包含在数组中\n\t     * @param val {*}\n\t     * @param array {Array}\n\t     * @return {number} -1为没有，其他为有\n\t     */\n\t    inArray: function inArray(val, array) {\n\t        for (var i = 0; i < array.length; i++) {\n\t            if (array[i] === val) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    },\n\t    inArrayTwo: function inArrayTwo(val, array, type) {\n\t        type = type || 'id';\n\t        for (var i = 0; i < array.length; i++) {\n\t            if (array[i][type] === val) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    },\n\t    extend: function extend(target) {\n\t        var _this = this;\n\t\n\t        for (var _len = arguments.length, parms = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t            parms[_key - 1] = arguments[_key];\n\t        }\n\t\n\t        parms.forEach(function (val) {\n\t            for (var key in val) {\n\t                if (!val.hasOwnProperty(key)) continue;\n\t                if (!_this.isObject(val[key]) && !_this.isArray(val[key])) {\n\t                    target[key] = val[key];\n\t                } else {\n\t                    target[key] = target[key] || {};\n\t                    _this.extend(target[key], val[key]);\n\t                }\n\t            }\n\t        });\n\t        return target;\n\t    },\n\t    /**\n\t     * 可选参数 传如字符串可以生成带前缀的唯一ID\n\t     * @return {string}\n\t     */\n\t    getId: function getId(p) {\n\t        id++;\n\t        return typeof p === 'string' && p + id || String(id);\n\t    },\n\t    getObjectLength: function getObjectLength(data) {\n\t        var length = 0;\n\t        for (var key in data) {\n\t            if (!data.hasOwnProperty(key)) continue;\n\t            length++;\n\t        }\n\t        return length;\n\t    }\n\t};\n\n/***/ })\n\n/******/ })\n});\n;\n\n\n// WEBPACK FOOTER //\n// GIS.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d9e55e53c3b86e016460","//import Library from './addressLibrary';\nimport Util from './util'\nlet Library={};\nlet ROOTCODE='0';\nlet order=['country','province','city','district','town','address'];\nlet stopLevel=4;\nlet orderRegExp=[\n    null,\n    /(省|市|(壮族|回族|维吾尔族?)?自治区|特别行政区)((?=,)|$)/g,\n    /(市|自治县|自治州|地区)((?=,)|$)/g,\n    /(自治县|[县区市])((?=,)|$)/g,\n    /(街道办事处|地区办事处|乡|镇|街道)((?=,)|$)/g,\n];\nclass Dispatcher {\n    static eventPool=[];\n    static joiner='-';\n    basePrefix=Util.getId();\n    constructor(option){\n        this.id=option.id||'';\n    }\n    on(type,callback,once,stop){\n        return Dispatcher.on(type,this.id,callback,once,stop);\n    }\n    emit(type,data){\n        return Dispatcher.emit(type,data,this.id,this);\n    }\n    off(type,callback){\n        return Dispatcher.off(type,this.id,callback);\n    }\n    once(type,name,callback,stop){\n        return Dispatcher.once(type,this.id,callback,stop);\n    }\n    onByObject(option,clipping=true){\n        if(!Util.isObject(option))return false;\n        for(let key in option){\n            if(!option.hasOwnProperty(key)) continue;\n            if(Util.isFunction(option[key])){\n                this.on(key,option[key]);\n                if(clipping){\n                    delete option[key]\n                }\n            }else if(Util.isObject(option[key])){\n                this.onByObject(option[key],clipping);\n            }\n        }\n    }\n    static once(type,name,callback,stop){\n        return Dispatcher.on(type,name,callback,true,stop);\n    }\n    static on(type,name,callback,once=false,stop=true){\n        let opt=type;\n        const $events=Dispatcher.eventPool;\n        if(typeof type==='string'){\n            opt={};\n            opt.type=type;\n            if(typeof name ==='string'||Util.isFunction(callback)){\n                opt.name=name;\n                opt.callback=callback\n            }else {\n                opt.callback=name\n            }\n            opt.once=once;\n            opt.stop=stop;\n        }\n        if(!Util.isFunction(opt.callback))return false;\n        if(!opt.type||typeof opt.type!=='string')return false;\n        opt.async=opt.type.split('!').length>1;\n        for(let i=0,len=$events.length;i<len;i++){\n            if(opt.name&&$events[i].name&&opt.name===$events[i].name&&opt.type===$events[i].type){\n                return false\n            }\n        }\n        $events.push(opt);\n        return true\n    }\n    static emit(type,data,name,scope){\n        scope=scope||this;\n        const $events=Dispatcher.eventPool;\n        let number=0;\n        for(let i=0,len=$events.length;i<len;i++){\n            let currentEvent=$events[i];\n            if(type&&type===currentEvent.type){\n                if(!(name&&currentEvent.name&&currentEvent.name!==name)){\n                    number++;\n                    currentEvent.callback.call(scope||{},data);\n                    if(currentEvent.once===true){\n                        setTimeout(()=>{Dispatcher.off(currentEvent.type,currentEvent.name,currentEvent.callback)},0)\n                    }\n                    if(currentEvent.stop===false&&currentEvent.name){\n                        let eventNames=currentEvent.name.split('.');\n                        if(eventNames.length>1){\n                            for(let j=0;j<eventNames.length;j++){\n                                let _eventNames=eventNames;\n                                _eventNames.splice(eventNames.length-1-j,j+1);\n                                if(Dispatcher.emit(type,data,_eventNames.join('.'),scope)!==0){\n                                    break\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return number;\n    }\n    static off(type,name,callback){\n        let number=0;\n        if(arguments.length===0){\n            number=Dispatcher.eventPool.length;\n            Dispatcher.eventPool=[];\n            return number\n        }\n        let opt=type;\n        const $events=Dispatcher.eventPool;\n        if(typeof type==='string'){\n            opt={};\n            opt.type=type;\n            if(typeof name ==='string'||callback){\n                opt.name=name;\n                opt.callback=callback\n            }else {\n                opt.callback=name\n            }\n        }\n        for(let i=0;i<$events.length;i++){\n            if(!(opt.name&&$events[i].name&&opt.name!==$events[i].name||(opt.type&&$events[i].type&&opt.type!==$events[i].type))){\n                if(!opt.callback||opt.callback===$events[i].callback){\n                    number++;\n                    $events.splice(i,1);\n                    i--;\n                }\n            }\n        }\n        Dispatcher.eventPool=$events;\n        return number;\n    }\n    static publish(){\n\n    }\n}\nclass CityModel{\n    constructor(option={}){\n        //编码\n        this.code=option.code;\n        //重点子城市\n        this.childrenNode=[];\n        //父级\n        this.parent=option.parent;\n        //层\n        this.level=option.level;\n        //权重\n        this.weights=option.weights;\n        //值\n        this.value=option.value;\n        //父节点code\n        this.parentCode=option.parentCode;\n        //匹配前的字符\n        this.matchText=option.matchText;\n        //匹配后的字符\n        this.matchedText=option.matchedText;\n        //匹配到的字符\n        this.matchToText=option.matchToText;\n        //当前处理序列\n        this.dealIndex=0;\n        if(orderRegExp[this.level] instanceof RegExp&&this.matchText){\n            this.matchTexts=option.matchText.split(orderRegExp[this.level]);\n        }\n    }\n    getParentMatchText(){\n        return this.parent&&this.parent.matchText\n    }\n    getChildrenMap(type){\n        let childrenCity=this.getChildren();\n        if(!childrenCity)return false;\n        let arr=[];\n        switch (type){\n            case 'code':\n                for(let key in childrenCity){\n                    if(!childrenCity.hasOwnProperty(key)) continue;\n                    arr.push(key);\n                }\n                break;\n            case 'value':\n                for(let key in childrenCity){\n                    if(!childrenCity.hasOwnProperty(key)) continue;\n                    arr.push(childrenCity[key]);\n                }\n                break;\n            default:\n                for(let key in childrenCity){\n                    if(!childrenCity.hasOwnProperty(key)) continue;\n                    arr.push([key,childrenCity[key]]);\n                }\n                break\n        }\n        return arr\n    }\n    getChildren(){\n        const code=this.code||ROOTCODE;\n        return Library[code]\n    }\n    getChildrenValues(){\n        return this.getChildrenMap('value')\n    }\n    emitNext(){\n        const parent=this.parent;\n        if(parent){\n            let dealIndex=parent.dealIndex;\n            let length=parent.childrenNode.length;\n            if((dealIndex+2>length||length===0)){\n                if(parent.weights>=95&&parent.level>=0){\n                    parent.childrenNodeSort();\n                    let child=parent.childrenNode[0];\n                    if(child&&child.weights>=95){\n                        child.end()\n                    }else {\n                        parent.end();\n                    }\n                    return true\n                }\n                return parent.emitNext();\n            }else {\n                parent.dealIndex++;\n                parent.childrenNode[parent.dealIndex].match();\n            }\n        }else {\n            index.emit('splitError',null,this.getTopId());\n        }\n        return false\n    }\n    createChildNode(matchToText,weights,noMatch=false){\n        let level=this.level+1;\n        let parent=this;\n        let parentCode=this.code;\n        let matchToCity;\n        let fullInfo=this.getFullInfoByValue(matchToText);\n        if(new RegExp(fullInfo.value).test(this.matchText)){\n            matchToText=fullInfo.value;\n        }\n        let matchTexts=this.matchText.split(matchToText);\n        let matchText=this.matchText;\n        if(matchTexts.length>1){\n            matchText=matchTexts.slice(1).join('');\n        }\n        weights=weights||0;\n        this.matchedText=matchText;\n        if(noMatch){\n            matchToText=null;\n        }\n        if(fullInfo){\n            let {code,value}=fullInfo;\n            let cityNode=new CityModel({\n                parentCode:parent.code,\n                code:code,\n                weights,\n                matchToText,\n                matchText,\n                level,\n                parent,\n                value\n            });\n            this.childrenNode.push(cityNode);\n            return cityNode\n        }\n        return false;\n    }\n    createChildrenNode(){\n        let city=this.getChildren();\n        let len=Util.getObjectLength(city);\n        let weights=len===1&&this.weights||1;\n        for(let key in city){\n            if(!city.hasOwnProperty(key)) continue;\n            this.createChildNode(city[key],weights,true)\n        }\n        return true\n    }\n    getFullInfoByValue(value){\n        let city=this.getChildren();\n        for(let key in city){\n            if(!city.hasOwnProperty(key)) continue;\n            if(new RegExp(value).test(city[key])){\n                return {code:key,value:city[key]}\n            }\n        }\n    }\n    match(){\n        let reg=orderRegExp[this.level];\n        let matchText=this.matchText;\n        if(!matchText)return this.end();\n        let code=this.code;\n        let parent=this.parent;\n        let childrenValues=this.getChildrenValues();\n        if(childrenValues){\n            let libraryStr=childrenValues.join(\",\");\n            if(reg){\n                libraryStr=libraryStr.replace(reg,'');\n            }\n            const _library=libraryStr.split(',');\n            const result=[];\n            if(_library.length===1){\n                this.createChildNode(_library[0],this.weights,true)\n            }else if(_library.length===0){\n                return this.end();\n            }else {\n                for (let i=0;i<_library.length;i++){\n                    if(new RegExp(_library[i]).test(matchText)&&matchText.indexOf(_library[i])<=5){\n                        let _index=matchText.indexOf(_library[i]);\n                        let weights=100-_index;\n                        let currentNode=this.createChildNode(_library[i],weights);\n                        if(currentNode){\n                            currentNode.weightsAdd();\n                        }\n                    }else if(parent&&new RegExp(_library[i]).test(parent.matchText)){\n                        this.matchText=this.parent.matchText;\n                        let _index=parent.matchText.indexOf(_library[i]);\n                        let weights=50-_index;\n                        let currentNode=this.createChildNode(_library[i],weights);\n                        if(currentNode){\n                            currentNode.weightsAdd();\n                        }\n                    }else {\n                        this.createChildNode(_library[i],1,true)\n                    }\n                }\n            }\n            this.childrenNodeSort();\n            const childrenNode=this.childrenNode[0];\n            if(childrenNode&&childrenNode.weights<=1&&this.weights<=1){\n                this.close();\n                this.emitNext();\n            }else {\n                this.childrenNode[0].match();\n            }\n        }else if(typeof this.getChildren() ==='undefined'){\n            if(this.level>=stopLevel||index.emit('noChildren',this,this.getTopId())===0){\n                if(this.weights<=95){\n                    this.close();\n                    this.emitNext();\n                }else {\n                    this.end();\n                }\n            }\n        }else {\n            this.emitNext();\n        }\n    }\n    childrenNodeSort(){\n        const children=this.childrenNode;\n        if(children.length>1){\n            children.sort((a,b)=>{\n                if(!b){\n                    return -1\n                }\n                if(!a){\n                    return 1\n                }\n                if(a.weights>b.weights){\n                    return -1;\n                }\n                return 1\n            })\n        }\n    }\n    close(){\n        let parent=this.parent;\n        if(parent){\n            for(let i=0;i<parent.childrenNode.length;i++){\n                if(parent.childrenNode[i]===this){\n                    parent.childrenNode[i]=null;\n                    break\n                }\n            }\n        }\n    }\n    getLastChild(){\n        let children=this.getChildrenNode();\n        if(children.length===0)return null;\n        return children[children.length-1];\n    }\n    getChildrenNode(){\n        let current=this;\n        let children=[];\n        while (current.childrenNode.length>0){\n            let childrenNode=current.childrenNode[current.dealIndex];\n            if(!childrenNode)break;\n            current=childrenNode;\n            children.push(current);\n        }\n        return children;\n    }\n    getTopParent(){\n        let parent=this;\n        while (parent.parent){\n            parent=parent.parent\n        }\n        return parent\n    }\n    end(){\n        let parent=this.getTopParent();\n        let childrenNode=parent.getChildrenNode();\n        let arr=[];\n        childrenNode.forEach(value=>{\n            if(value){\n                arr.push(value.value);\n            }\n        });\n        if(childrenNode.length>0){\n            arr.push(childrenNode[childrenNode.length-1].matchText);\n        }\n        parent.complete=true;\n        parent.result=arr;\n        index.emit('splitSuccess',arr,parent.id);\n    }\n    getTopId(){\n        let parent=this;\n        while (parent.parent){\n            parent=parent.parent\n        }\n        return parent.id;\n    }\n    getParentsWeights(){\n        let parent=this;\n        let weights=parent.weights||0;\n        while (parent.parent){\n            parent=parent.parent;\n            weights+=(parent.weights||0);\n        }\n        return weights;\n    }\n    weightsAdd(){\n        let parent=this.parent;\n        while (parent){\n            parent.weights+=50;\n            parent=parent.parent;\n        }\n        return this;\n    }\n}\nexport class index extends Dispatcher{\n    allowJumpInterval=2;\n    constructor(matchText){\n        const id=Util.getId();\n        super({id});\n        this.matchText=String(matchText).replace(/\\u202d/g,'');\n        this.matchText=this.matchText.replace(/[\\r\\n]/g,' ');\n        this.level=0;\n        this.id=id;\n        this.tree=this.createRoot();\n        this.tree.id=id;\n    }\n    static setRootId(id){\n        if(!id)return false;\n        ROOTCODE=String(id)\n    }\n    static setLibrary(library){\n        Library=library;\n    }\n    static setStopLevel(level){\n        stopLevel=level\n    }\n    static setAllowJumpInterval(num){\n        if(isNaN(num)){\n            return false\n        }\n        index.prototype.allowJumpInterval=num;\n    }\n    setAllowJumpInterval(num){\n        if(isNaN(num)){\n            return false\n        }\n        this.allowJumpInterval=num;\n    }\n    createRoot(){\n        const root={\n            parentCode:null,\n            level:0,\n            code:ROOTCODE,\n            matchText:this.matchText,\n            weights:100\n        };\n        return new CityModel(root)\n    }\n    start(callback){\n        if(callback){\n            this.on('splitSuccess',callback,true);\n        }\n        return new Promise((resolve,reject)=>{\n            this.on('splitSuccess',resolve,true);\n            this.on('splitError',reject,true);\n            this.tree.match();\n        });\n    }\n    getTree(){\n        return this.tree\n    }\n    getMatchToTexts(){\n        let childrenNodes=this.tree.getChildrenNode();\n        let arr=[];\n        childrenNodes.forEach(val=>{\n            if(val.matchToText){\n                arr.push(val.matchToText)\n            }\n        });\n        if(childrenNodes.length>0){\n            arr.push(childrenNodes[childrenNodes.length-1].matchText);\n        }\n        return arr;\n    }\n    splitInfomation(callback){\n        if(callback){\n            this.on('splitInfomationSuccess',callback,true);\n        }\n        return new Promise((resolve,reject)=>{\n            this.on('splitInfomationSuccess',resolve,true);\n            this.on('splitInfomationError',reject,true);\n            if(this.tree.complete){\n                return this.startSplitInfomation();\n            }\n            this.start().then(val=>{\n                let result=this.startSplitInfomation();\n                this.emit(result&&'splitInfomationSuccess'||'splitInfomationError',result,true);\n            })\n        });\n    }\n    matchPhone(txt,_address){\n        txt=String(txt);\n        _address=String(_address);\n        let prevExpReg='([\\\\s,，、]*)?(手机|联系方式|电话|联系人)?号?(号码)?(、|:|：|\\\\s)?';//(\\d{11}|(\\d|-|转){8,30})\n        let mobilePhoneExpReg='(([(（]?\\\\+86[)）]?)?1\\\\d{2}[ \\\\-]?\\\\d{4}[ \\\\-]?\\\\d{4})';\n        let mobilePhoneFullExpReg=prevExpReg+mobilePhoneExpReg;\n        let mobilePhone=txt.match(new RegExp(mobilePhoneFullExpReg,'g'));\n        let trimSpace=/[^\\d]/g;\n        let data={};\n        if(mobilePhone){\n            txt=txt.replace(new RegExp(mobilePhoneFullExpReg,'g'),' ');\n            _address=_address.replace(new RegExp(mobilePhoneFullExpReg,'g'),' ');\n            data.mobilePhone=mobilePhone[0].match(new RegExp(mobilePhoneExpReg))[0].replace(trimSpace,'');\n            if(mobilePhone[1]){\n                data.phone=mobilePhone[1].match(new RegExp(mobilePhoneExpReg))[0].replace(trimSpace,'')+' ';\n            }\n        }\n        let phoneExpReg='(\\\\d|([\\\\-转()（） ]{0,2}\\\\d){1}){8,30}';\n        let phoneFullExpReg=prevExpReg+phoneExpReg;\n        let phone=txt.match(new RegExp(phoneFullExpReg,'g'));\n        if(phone){\n            txt=txt.replace(new RegExp(phoneFullExpReg,'g'),' ');\n            _address=_address.replace(new RegExp(phoneFullExpReg,'g'),' ');\n            data.phone=(data.phone||'')+phone[0].match(new RegExp(phoneExpReg))[0];\n            if(phone[1]){\n                data.phone+=phone[1].match(new RegExp(phoneExpReg))[0];\n            }\n        }\n        return [data.mobilePhone,data.phone,txt,_address]\n    }\n    static trimArray(arr){\n        let newArr=[];\n        if(Util.isArray(arr)){\n            for(let i=0;i<arr.length;i++){\n                if(arr[i]){\n                    newArr.push(arr[i])\n                }\n            }\n        }\n        return newArr\n    }\n    startSplitInfomation(txt){\n        txt=txt||this.matchText;\n        const matchToTexts=this.getMatchToTexts();\n        let first,last;\n        if(matchToTexts.length>1){\n            first=txt.match(new RegExp('.*?(?='+matchToTexts[0]+')'));\n            last=matchToTexts[matchToTexts.length-1];//txt.match(new RegExp('(?<='+matchToTexts[matchToTexts.length-1]+').*$'));\n        }else {\n            first=txt;\n            last='';\n        }\n        let merge=' '+first+\" $$$$ \"+last+' ';\n        let address=[...this.tree.result];\n        let _address=address[address.length-1];\n        let mobilePhone,phone;\n        [mobilePhone,phone,merge,_address]=this.matchPhone(merge,_address);\n        let personExp=/(([^\\u4e00-\\u9fa5]*)?(姓名|名字|([收发][件货]人)|联系人)[:：\\s]*)|([^a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]*$)/g;\n        let personMatchExps=/[^\\u4e00-\\u9fa5](姓名|名字|([收发][件货]人)|联系人)[:：\\s]*[a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]{1,15}[^a-zA-Z0-9\\u4e00-\\u9fa5()\\-（）]*/g;\n        let personLastExp=/[\\s,，、][^\\s,，、]{2,15}[（(]收[)）]/g;\n        let splitSpace=/[^a-zA-Z0-9\\u4e00-\\u9fa5]+/g;\n        let person=merge.match(personMatchExps);\n\n        if(person){\n            person=person[0].replace(personExp,'');\n        }else {\n            person=merge.match(personLastExp);\n            if(person){\n                person=person[0].replace(personExp,'');\n            }\n        }\n        if(!person){\n            let mayPerson=[];\n            let merges=merge.split(\"$$$$\");\n            first=merges[0];\n            last=merges[1];\n            if(first){\n                mayPerson=mayPerson.concat(first.split(splitSpace));\n            }\n            if(last){\n                let persons=index.trimArray(last.split(splitSpace));\n                if(persons.length>0&&!/谢谢/.test(persons[persons.length-1])){\n                    persons=persons.reverse()\n                }\n                mayPerson=mayPerson.concat(persons);\n            }\n            for(let i=0;i<mayPerson.length;i++){\n                let name=mayPerson[i].replace(personExp,'');\n                if(name&&!/地址/.test(name)&&!/[0-9a-zA-Z][楼号栋斤室]/.test(name)&&(/(^[王李张刘陈杨黄赵周吴徐孙马朱胡林郭何高罗郑梁宋唐许邓冯韩曹])|(先生|女士|[^拒]收)$/.test(name)||name.length<=15)){\n                    person=name;\n                    break;\n                }\n            }\n        }\n        _address.replace(/[\\s,，、]{2,}/,'');\n        address[address.length-1]=_address;\n        person=person||'';\n        person=person.replace(/^\\s*|\\s*$/g,'');\n        return {mobilePhone,phone,person,address};\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/addressSplit/index.js","/**\n * 自增ID\n * @type {number}\n */\nlet id=0;\nexport default {\n    /**\n     * 检测参数类型是否为数组\n     * @param a {*}\n     * @return {boolean}\n     */\n    isArray: (a) => {\n        return Object.prototype.toString.call(a) === '[object Array]'\n    },\n    /**\n     * 检测参数类型是否为原生对象\n     * @param a\n     * @return {boolean}\n     */\n    isObject: (a) => {\n        return Object.prototype.toString.call(a) === '[object Object]'\n    },\n    /**\n     * 检测参数类型是否为函数\n     * @param a\n     * @return {boolean}\n     */\n    isFunction: (a) => {\n        return Object.prototype.toString.call(a) === '[object Function]'\n    },\n    /**\n     * 检查是否包含在数组中\n     * @param val {*}\n     * @param array {Array}\n     * @return {number} -1为没有，其他为有\n     */\n    inArray: (val, array) => {\n        for (let i = 0; i < array.length; i++) {\n            if (array[i] === val) {\n                return i\n            }\n        }\n        return -1;\n    },\n    inArrayTwo: (val, array, type) => {\n        type = type || 'id';\n        for (let i = 0; i < array.length; i++) {\n            if (array[i][type] === val) {\n                return i\n            }\n        }\n        return -1;\n    },\n    extend: function (target, ...parms) {\n        parms.forEach(val => {\n            for (let key in val) {\n                if (!val.hasOwnProperty(key)) continue;\n                if (!this.isObject(val[key]) && !this.isArray(val[key])) {\n                    target[key] = val[key]\n                } else {\n                    target[key] = target[key] || {};\n                    this.extend(target[key], val[key]);\n                }\n            }\n        });\n        return target\n    },\n    /**\n     * 可选参数 传如字符串可以生成带前缀的唯一ID\n     * @return {string}\n     */\n    getId: (p)=>{\n        id++;\n        return typeof p==='string'&&(p+id)||String(id);\n    },\n    getObjectLength: data => {\n        let length=0;\n        for(let key in data){\n            if (!data.hasOwnProperty(key)) continue;\n            length++;\n        }\n        return length\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/addressSplit/util.js"],"sourceRoot":""}